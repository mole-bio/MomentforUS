{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar initialState = {\n  //   name: \"swoosh\",\n  //   age: 35,\n  //   password: \"biogerentology\",\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action creator\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: \"LOG_OUT\"\n  };\n}; // const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   data: \"senescence\",\n// };\n// 위의 기존 함수를 동적으로 변경한 것이 action creator\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n}; // store.dispatch(changeNickname('바꿀 이름'))\n// reducer는 (이전상태, 액션) 을 => 다음상태로 변화시키는 역할을 한다\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/swoosh/Desktop/MomentForUS/ver0.1/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","changeNickname","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAG;AACnB;AACA;AACA;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GAJa;AAUnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAVa,CAArB,C,CAeA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD,C,CAMA;AAEA;;;AACA,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AACpD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKV,OAAL;AACE,6CAAYc,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AACF,SAAK,QAAL;AACE,6CACKF,KADL;AAEEZ,QAAAA,IAAI,kCACCY,KAAK,CAACZ,IADP;AAEFC,UAAAA,UAAU,EAAE,IAFV;AAGFD,UAAAA,IAAI,EAAEa,MAAM,CAACN;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKK,KADL;AAEEZ,QAAAA,IAAI,kCACCY,KAAK,CAACZ,IADP;AAEFC,UAAAA,UAAU,EAAE,KAFV;AAGFD,UAAAA,IAAI,EAAE;AAHJ;AAFN;;AAQF;AACE,aAAOY,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\n\nconst initialState = {\n  //   name: \"swoosh\",\n  //   age: 35,\n  //   password: \"biogerentology\",\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\n//action creator\nexport const loginAction = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\n\nexport const logoutAction = () => {\n  return {\n    type: \"LOG_OUT\",\n  };\n};\n\n// const changeNickname = {\n//   type: \"CHANGE_NICKNAME\",\n//   data: \"senescence\",\n// };\n// 위의 기존 함수를 동적으로 변경한 것이 action creator\nconst changeNickname = (data) => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data,\n  };\n};\n// store.dispatch(changeNickname('바꿀 이름'))\n\n// reducer는 (이전상태, 액션) 을 => 다음상태로 변화시키는 역할을 한다\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return { ...state, ...action.payload };\n    case \"LOG_IN\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data,\n        },\n      };\n    case \"LOG_OUT\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}