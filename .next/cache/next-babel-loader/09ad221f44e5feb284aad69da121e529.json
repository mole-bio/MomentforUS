{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/swoosh/Desktop/MomentForUS/ver0.1/front/pages/login.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Row, Col } from \"antd\";\nimport UserScreen from \"../components/UserScreen\";\nimport LoginForm from \"../components/LoginForm\";\nimport { useSelector } from \"react-redux\";\n\nvar Login = function Login() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // 리덕스르 적용하면 아래와 같이 바뀐다\n  // const { isLoggedIn } = useSelector((state) => state.user);\n  return __jsx(LoginForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, isLoggedIn && __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }\n  })) // 리덕스를 적용하면 이렇게 props 형태로 넘겨줄 필요도 없다\n  ;\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/swoosh/Desktop/MomentForUS/ver0.1/front/pages/login.js"],"names":["React","useState","AppLayout","Row","Col","UserScreen","LoginForm","useSelector","Login","isLoggedIn"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB;AACA;AACA;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGC,UAAU,IAAI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjB,CADF,CAIe;AAJf;AAMD,CAVD;;KAAMD,K;AAYN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Row, Col } from \"antd\";\nimport UserScreen from \"../components/UserScreen\";\nimport LoginForm from \"../components/LoginForm\";\nimport { useSelector } from \"react-redux\";\n\nconst Login = () => {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // 리덕스르 적용하면 아래와 같이 바뀐다\n  // const { isLoggedIn } = useSelector((state) => state.user);\n  return (\n    <LoginForm>\n      {/* AppLayout에 들어있는 애들이 children이 된다 */}\n      {isLoggedIn && <AppLayout />}\n    </LoginForm> // 리덕스를 적용하면 이렇게 props 형태로 넘겨줄 필요도 없다\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}